{
    "en": {
        "main": {
            "h1": "ESP MPS - ESP8266 Motion and Presence Sensor",
            "h2": "A simple library that will turn your ESP8266 into a full value motion sensor and/or presence sensor without other periphery.",
            "h3": "A library written on C++, which will allow you to use your ESP8266 or ESP32 as a motion or presence sensor without connecting any additional devices to it.",
            "menu1": "menu",
            "menu2": "Beginning of work",
            "menu3": "Installation",
            "menu4": "Dependencies",
            "menu5": "Usage",
            "menu6": "Description of structures",
            "menu7": "Examples of using",
            "menu8": "Principle of operation",
            "created": "Created:",
            "date": "06.12.2023",
            "author": "Author:",
            "name": "Dmitry Kashuba",
            "download": "documentation",
            "att": "ATTENTION:",
            "install": "To get started, download the ESP_MPS.h library file and place it among other project files.",
            "att1": "Please note that the installation of standard libraries is required to work ESP_MPS.h. Study the next section before proceeding with use.",
            "dep1": "The ESP_MPS.H library requires 3 standard libraries for it's work:",
            "dep2": "You need to have these libraries in your project. Take advantage of the standard mesher of the libraries to install them. If you use Platformio in VS Code or Arduino IDE, these libraries should have been installed along with the ESP core (which is non -firmly for firming the device).",
            "use1": "Used to connect to the existing WiFi network. With a successful connection, True returns. As parameters, lines containing the name of the network and password, respectively.",
            "use2": "Used to set the sensor parameters. The level of the RSSI signal is transmitted as the parameter (see MPS_RSSI()), when the device is at a distance of exactly one meter from the WiFi source. This is necessary to determine the distance to the source. If you do not need to determine the distance, do not pass the parameter.",
            "use3": "It is used to task MeasuredPower (to determine the distance to the WiFi source). Returns the current signal weakening value. The farther the source of WiFi, the lower the value. The values are in the negative range.",
            "use4": "Returns the current distance to the WiFi source (in meters). Measurement error - 0.3 meters. If the MEASUREDPower parameter has not been set in mps_seetup (), returns -1.",
            "use5": "Returns the current value from the motion sensor. On the graph, it will look like a sharp jump at the time of movement of the object within the radius of detection. If the buffer has not yet been filled, the time required to fill it (moves from negative values to zero).",
            "use6": "Returns the current value from the presence sensor. On the graph, this will be displayed by Constanta while the object is in the radius of detection.",
            "use7": "This value is returned by the MPS_MotionSensorLevel() and MPS_PresenceSensorLevel() methods if the radar was not initialized using the MPS_Setup() method.",
            "use8": "This value is returned by the MPS_MotionSensorLevel() and MPS_PresenceSensorLevel() methods if the signal is too weak.",
            "use9": "This variable determines which signal is considered weak.",
            "use10": "This value is returned by the MPS_MotionSensorLevel() and MPS_PresenceSensorLevel() methods if the WiFi connection is lost.",
            "att2": "The MeasuredPower parameter needs to be transmitted with a minus!",
            "ex1": "Connection of the library and its launch",
            "ex2": "The output of the distance",
            "ex3": "Data output from sensors",
            "ex4": "The output of the signal weakening",
            "ex5": "The conclusion of the information that the sensor caught the movement",
            "att3": "If you connect a WiFi fee yourself, you do not need to call MPS_StartWiFiConnection()."
        }
    },
    "ru": {
        "main": {
            "h1": "ESP MPS - ESP8266 Motion and Presence Sensor",
            "h2": "Простая библиотека, которая превратит ваш ESP8266 в полноценный датчик движения и/или присутствия без сторонней периферии.",
            "h3": "Библиотека, написанная на C++, которая позволит вам использовать ваш ESP8266 или ESP32 как датчик движения или присутствия не подключая к нему каких-либо дополнительных устройств.",
            "menu1": "меню",
            "menu2": "Начало работы",
            "menu3": "Установка",
            "menu4": "Зависимости",
            "menu5": "Использование",
            "menu6": "Описание структур",
            "menu7": "Примеры использования",
            "menu8": "Принцип работы",
            "created": "Создано:",
            "date": "06.12.2023",
            "author": "Автор:",
            "name": "Дмитрий Кашуба",
            "download": "документация",
            "att": "ВНИМАНИЕ:",
            "install": "Для начала работы скачайте файл библиотеки ESP_MPS.h и разместите его среди других файлов проекта.",
            "att1": "Обратите внимание, что для работы ESP_MPS.h необходима установка стандартных библиотек. Изучите следующий раздел, прежде чем приступать к использованию.",
            "dep1": "Библиотека ESP_MPS.h для своей работы требует 3 стандартные библиотеки:",
            "dep2": "Вам необходимо иметь эти библиотеки в вашем проекте. Воспользуйтесь стандартным менджером библиотек для их установки. Если вы используете PlatformIO в VS Code или Arduino IDE, эти библиотеки должны были установиться вместе с ядром ESP (которое необохдимо для прошивки устройства).",
            "use1": "Используется для подключения к существующей сети Wi-Fi. При успешном подключении возвращает true. В качестве параметров передаются строки, содержащие имя сети и пароль соответственно.",
            "use2": "Используется для задания параметров сенсора. В качестве параметра передаются уровень ослабления сигнала RSSI (смотрите MPS_RSSI()), когда устройство находится на расстоянии ровно одного метра от источника Wi-Fi. Это необходимо для определения расстояния до источника. Если вам не нужно определять расстояние, не передавайте параметр.",
            "use3": "Используется для задания MeasuredPower (для определения расстояния до источника Wi-Fi). Возвращает текущее значение ослабления сигнала. Чем дальше источник Wi-Fi, тем меньше значение. Значения находятся в отрицательном диапозоне.",
            "use4": "Возвращает текущее расстояние до источника Wi-Fi (в метрах). Погрешность измерения - 0.3 метра. Если в MPS_Setup() не был задан параметр MeasuredPower, возвращает -1.",
            "use5": "Возвращает текущее значение с датчика движения. На графике это будет выглядеть как резкий скачок в момент движения объекта в радиусе обнаружения. Если буфер еще не был заполнен, вернет время, необходимое до его заполнения (движется от отрицательных значений к нулю).",
            "use6": "Возвращает текущее значение с датчика присутствия. На графике это будет отображаться константой, пока объект находится в радиусе обнаружения.",
            "use7": "Это значение возвращают методы MPS_MotionSensorLevel() и MPS_PresenceSensorLevel(), если радар не был инициализирован с помощью метода MPS_Setup().",
            "use8": "Это значение возвращают методы MPS_MotionSensorLevel() и MPS_PresenceSensorLevel(), если сигнал слишком слабый.",
            "use9": "Это переменная определяет, какой сигнал считается слабым.",
            "use10": "Это значение возвращают методы MPS_MotionSensorLevel() и MPS_PresenceSensorLevel(), если потеряно Wi-Fi соединение.",
            "att2": "Параметр MeasuredPower нужно передавать с минусом!",
            "ex1": "Подключение библиотеки и ее запуск",
            "ex2": "Вывод дистанции",
            "ex3": "Вывод данных с датчиков",
            "ex4": "Вывод ослабления сигнала",
            "ex5": "Вывод информации о том, что датчик уловил движение",
            "att3": "Если вы подключаете плату к Wi-Fi самостоятельно, вызывать MPS_StartWiFiConnection() не нужно."
        }
    }
}